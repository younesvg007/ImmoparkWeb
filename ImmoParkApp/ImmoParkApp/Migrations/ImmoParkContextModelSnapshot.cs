// <auto-generated />
using System;
using ImmoParkApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImmoParkApp.Migrations
{
    [DbContext(typeof(ImmoParkContext))]
    partial class ImmoParkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ImmoParkApp.Models.Client", b =>
                {
                    b.Property<int>("NatRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BirthDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Civility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gsm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isRenter")
                        .HasColumnType("bit");

                    b.HasKey("NatRegister");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ImmoParkApp.Models.Contract", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountGarantee")
                        .HasColumnType("int");

                    b.Property<bool>("CautionPaid")
                        .HasColumnType("bit");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndexBase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndexEntryElectricity")
                        .HasColumnType("int");

                    b.Property<int>("IndexEntryGaz")
                        .HasColumnType("int");

                    b.Property<int>("IndexEntryWater")
                        .HasColumnType("int");

                    b.Property<int>("IndexOutElectricity")
                        .HasColumnType("int");

                    b.Property<int>("IndexOutGaz")
                        .HasColumnType("int");

                    b.Property<int>("IndexOutWater")
                        .HasColumnType("int");

                    b.Property<string>("OutDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCautionDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("clientNatRegister")
                        .HasColumnType("int");

                    b.Property<int>("idClient")
                        .HasColumnType("int");

                    b.Property<int>("idProperty")
                        .HasColumnType("int");

                    b.Property<bool>("isFirstMonthPaid")
                        .HasColumnType("bit");

                    b.Property<int?>("propertyID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("clientNatRegister");

                    b.HasIndex("propertyID");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("ImmoParkApp.Models.Property", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AreaKitchen")
                        .HasColumnType("int");

                    b.Property<int>("AreaLiving")
                        .HasColumnType("int");

                    b.Property<int>("AreaRoom")
                        .HasColumnType("int");

                    b.Property<int>("AreaTotal")
                        .HasColumnType("int");

                    b.Property<string>("Floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NbRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RentPrice")
                        .HasColumnType("int");

                    b.Property<int>("TaxesPrice")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("ImmoParkApp.Models.Contract", b =>
                {
                    b.HasOne("ImmoParkApp.Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("clientNatRegister");

                    b.HasOne("ImmoParkApp.Models.Property", "property")
                        .WithMany()
                        .HasForeignKey("propertyID");
                });
#pragma warning restore 612, 618
        }
    }
}
